package org.example.pharmacyproject.seeders;

import jakarta.annotation.PostConstruct;
import org.example.pharmacyproject.entities.Drug;
import org.example.pharmacyproject.repositories.DrugRepository;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import java.util.Arrays;
import java.util.List;
import java.util.Random;

@Component
public class DrugSeeder {

    private final DrugRepository drugRepository;
    private final Random random = new Random();

    @Value("${app.seeders.enabled:true}")
    private boolean seedersEnabled;

    public DrugSeeder(DrugRepository drugRepository) {
        this.drugRepository = drugRepository;
    }

    @PostConstruct
    public void seedDrugs() {
        if (!seedersEnabled) {
            return;
        }

        // Only seed if the database is empty
        if (drugRepository.count() == 0) {
            for (int i = 0; i < 100; i++) {
                Drug drug = generateMockDrug();
                drugRepository.save(drug);
            }
            System.out.println("Seeded 100 drugs into the database");
        }
    }

    private Drug generateMockDrug() {
        String name = getRandomDrugName();
        String type = getRandomDrugType();
        String manufacturer = getRandomManufacturer();
        String dosage = getRandomDosage();
        String description = getRandomDescription(name, type);
        boolean prescriptionRequired = random.nextBoolean();

        return new Drug(
                null, // ID will be generated by the database
                name,
                type,
                manufacturer,
                dosage,
                description,
                prescriptionRequired
        );
    }

    private String getRandomDrugName() {
        List<String> prefixes = Arrays.asList(
                "Neo", "Levo", "Oxy", "Hydro", "Dex", "Pan", "Ami", "Medi", "Vir", "Zol",
                "Flu", "Cef", "Nor", "Sil", "Rami", "Lisi", "Ator", "Sim", "Acet", "Para",
                "Ibup", "Aspi", "Diclo", "Meth", "Pred", "Amit", "Sertr", "Fluox", "Escit", "Venlaf"
        );

        List<String> suffixes = Arrays.asList(
                "ol", "in", "um", "an", "ate", "ine", "one", "ide", "amide", "amine",
                "azole", "cillin", "mycin", "oxacin", "pril", "sartan", "statin", "vir", "pam", "lone",
                "profen", "rin", "fenac", "formin", "sone", "tyline", "aline", "etine", "pram", "axine"
        );

        String prefix = prefixes.get(random.nextInt(prefixes.size()));
        String suffix = suffixes.get(random.nextInt(suffixes.size()));

        // Add a random number for some drugs to make them more varied
        boolean addNumber = random.nextBoolean();
        String number = addNumber ? String.valueOf(random.nextInt(100) + 1) : "";

        return prefix + suffix + number;
    }

    private String getRandomDrugType() {
        List<String> types = Arrays.asList(
                "Analgesic", "Antibiotic", "Antidepressant", "Antiviral", "Antihistamine",
                "Anti-inflammatory", "Antipsychotic", "Antifungal", "Beta Blocker", "Bronchodilator",
                "Calcium Channel Blocker", "Contraceptive", "Corticosteroid", "Decongestant", "Diuretic",
                "Hormone", "Immunosuppressant", "Muscle Relaxant", "Sedative", "Statin",
                "Vaccine", "Vitamin", "ACE Inhibitor", "Anticonvulsant", "Anticoagulant"
        );

        return types.get(random.nextInt(types.size()));
    }

    private String getRandomManufacturer() {
        List<String> manufacturers = Arrays.asList(
                "Pfizer", "Novartis", "Roche", "Merck", "Johnson & Johnson",
                "AstraZeneca", "GlaxoSmithKline", "Sanofi", "Eli Lilly", "AbbVie",
                "Bristol-Myers Squibb", "Bayer", "Boehringer Ingelheim", "Amgen", "Gilead Sciences",
                "Novo Nordisk", "Takeda", "Biogen", "Teva", "Astellas"
        );

        return manufacturers.get(random.nextInt(manufacturers.size()));
    }

    private String getRandomDosage() {
        List<String> strengths = Arrays.asList("5", "10", "15", "20", "25", "50", "75", "100", "150", "200", "250", "500", "1000");
        List<String> units = Arrays.asList("mg", "mcg", "g", "mL", "IU");
        List<String> forms = Arrays.asList("tablet", "capsule", "injection", "solution", "suspension", "cream", "ointment", "patch", "powder", "suppository");
        List<String> frequencies = Arrays.asList("once daily", "twice daily", "three times daily", "four times daily", "every 4 hours", "every 6 hours", "every 8 hours", "every 12 hours", "as needed");

        String strength = strengths.get(random.nextInt(strengths.size()));
        String unit = units.get(random.nextInt(units.size()));
        String form = forms.get(random.nextInt(forms.size()));
        String frequency = frequencies.get(random.nextInt(frequencies.size()));

        return strength + " " + unit + ", " + form + ", " + frequency;
    }

    private String getRandomDescription(String name, String type) {
        List<String> actions = Arrays.asList(
                "treats", "helps manage", "prevents", "reduces symptoms of", "is effective against",
                "alleviates", "is prescribed for", "is indicated for", "provides relief from", "controls"
        );

        List<String> conditions = Arrays.asList(
                "pain", "inflammation", "bacterial infections", "viral infections", "hypertension",
                "diabetes", "asthma", "depression", "anxiety", "allergies",
                "heart disease", "cancer", "arthritis", "osteoporosis", "Alzheimer's disease",
                "Parkinson's disease", "epilepsy", "multiple sclerosis", "HIV/AIDS", "tuberculosis"
        );

        List<String> sideEffects = Arrays.asList(
                "nausea", "headache", "dizziness", "drowsiness", "fatigue",
                "dry mouth", "constipation", "diarrhea", "insomnia", "skin rash",
                "increased heart rate", "decreased appetite", "blurred vision", "sweating", "tremor"
        );

        String action = actions.get(random.nextInt(actions.size()));
        String condition = conditions.get(random.nextInt(conditions.size()));
        String sideEffect1 = sideEffects.get(random.nextInt(sideEffects.size()));
        String sideEffect2 = sideEffects.get(random.nextInt(sideEffects.size()));

        while (sideEffect1.equals(sideEffect2)) {
            sideEffect2 = sideEffects.get(random.nextInt(sideEffects.size()));
        }

        return String.format(
                "%s is a %s that %s %s. It works by targeting specific receptors in the body to provide therapeutic effects. " +
                "Common side effects may include %s and %s. Always consult with a healthcare provider before starting any new medication. " +
                "Store at room temperature away from moisture and heat.",
                name, type.toLowerCase(), action, condition, sideEffect1, sideEffect2
        );
    }
}
